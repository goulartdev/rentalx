version: '3'

services:
  backend:
    container_name: rentalx-backend
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VARIANT: ${NODE_VERSION}
    env_file: .env
    restart: unless-stopped
    command: yarn start:prod
    ports: 
      - ${API_PORT}:${API_PORT}
    networks:
      - rentalx
    depends_on: 
      - database
      - redis

  database:
    container_name: rentalx-db
    image: postgres:13.2
    environment: 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rentalx

  redis:
    container_name: rentalx-redis
    image: redis:6.0.14-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/bitnami/redis/data
    networks:
      - rentalx

volumes:
  postgres-data:
  redis-data:

networks:
  rentalx:
    